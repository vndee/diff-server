version: '2.3'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
        - "2181:2181"
    networks:
      stream-network:
        aliases:
          - zookeeper
    restart: always

  kafka:
    image: wurstmeister/kafka
    depends_on:
        - zookeeper
    ports:
        - "9092:9092"
        - "9094:9094"
    environment:
        KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
        KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9094
        KAFKA_ADVERTISED_HOST_NAME: 0.0.0.0
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_LOG_RETENTION_MINUTES: 10
        KAFKA_LOG_SEGMENT_BYTES: 107374182
        KAFKA_NUM_PARTITIONS: 12
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
    networks:
      stream-network:
        aliases:
          - kafka
    restart: always

  webserver:
    image: nginx:latest
    ports:
      - "5001:5001"
    restart: always
    volumes:
      - ./configs/nginx/:/etc/nginx/conf.d/:ro
      - ${PWD}/static/images/:/www/data/images/

  postgres:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGDATA: /data/postgres
    volumes:
      - ./static/databases/postgres:/data/postgres:wro
    ports:
      - "5432:5432"
    networks:
      stream-network:
        aliases:
          - postgres
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - ./static/databases/pgadmin:/var/lib/pgadmin:wro
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - stream-network
    restart: unless-stopped

  service_server:
    build:
      context: .
      dockerfile: ./docker/server.Dockerfile
    depends_on:
      - postgres
      - kafka
    ports:
      - "7000:5000"
    volumes:
      - ${PWD}:/app/
    command: ["python", "server.py"]
    networks:
      - stream-network

  translator_worker:
    build:
      context: .
      dockerfile: ./docker/translator.Dockerfile
    runtime: nvidia
    depends_on:
      - kafka
    environment:
      - NVIDIA_DISABLE_REQUIRE=1
    volumes:
      - ${PWD}:/app/
    command: ["python3", "translator.py"]
    networks:
      - stream-network

  imagen_worker:
    build:
      context: .
      dockerfile: ./docker/imagen.Dockerfile
    runtime: nvidia
    depends_on:
      - kafka
    environment:
      - NVIDIA_DISABLE_REQUIRE=1
    volumes:
      - ${PWD}:/app/
    command: ["python3", "imagen.py"]
    networks:
      - stream-network

networks:
  stream-network:
    external: true